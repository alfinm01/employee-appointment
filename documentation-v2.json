{
  "openapi": "3.0.0",
  "info": {
    "description": "Dokumentasi dari modul Pengangkatan Pegawai, unit bisnis Sumber Daya Manusia.\nTugas besar mata kuliah II3120 - Layanan STI tahun ajaran 2019/2020.",
    "version": "1.0.0",
    "title": "Pengangkatan Pegawai"
  },
  "servers": [
    {
      "url": "https://localhost:8000/pengangkatan-pegawai"
    }
  ],
  "tags": [
		{
			"name": "Pegawai",
			"description": "Endpoints terkait pegawai"
		},
		{
			"name": "Generator",
			"description": "Endpoints terkait generate sesuatu terhadap pegawai"
		}
	],
  "paths": {
    "/generate/identity/{id}": {
      "get": {
        "tags": [
          "Generator"
        ],
        "summary": "Menghasilkan SK dari pegawai dengan ID tersebut",
        "operationId": "generateIdentity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai yang akan dihasilkan SK-nya",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      }
    },
    "/generate/sk/{id}": {
      "get": {
        "tags": [
          "Generator"
        ],
        "summary": "Menghasilkan SK dari pegawai dengan ID tersebut",
        "operationId": "generateSK",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai yang akan dihasilkan SK-nya",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      }
    },
    "/generate/email/{id}": {
      "post": {
        "tags": [
          "Generator"
        ],
        "summary": "Membuat email organisasi dari pegawai dengan ID tersebut",
        "operationId": "generateEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai yang akan dihasilkan email-nya",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      }
    },
    "/generate/fingerprint/{id}": {
      "post": {
        "tags": [
          "Generator"
        ],
        "summary": "Membuat fingerprint dari pegawai dengan ID tersebut",
        "operationId": "generateFingerprint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai tersebut",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      }
    },
    "/generate/salary/{id}": {
      "post": {
        "tags": [
          "Generator"
        ],
        "summary": "Menetapkan remunerasi dari pegawai dengan ID tersebut",
        "operationId": "generateSalary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai tersebut",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      }
    },
    "/employee": {
      "get": {
        "tags": [
          "Pegawai"
        ],
        "summary": "Mendapatkan informasi semua pegawai",
        "operationId": "getAllEmployees",
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      },
      "post": {
        "tags": [
          "Pegawai"
        ],
        "summary": "Mendapatkan informasi pegawai dengan ID tersebut",
        "operationId": "createEmployee",
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      }
    },
    "/employee/{id}": {
      "get": {
        "tags": [
          "Pegawai"
        ],
        "summary": "Mendapatkan informasi pegawai dengan ID tersebut",
        "operationId": "getEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai tersebut",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      },
      "put": {
        "tags": [
          "Pegawai"
        ],
        "summary": "Mendapatkan informasi pegawai dengan ID tersebut",
        "operationId": "updateEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai tersebut",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      },
      "delete": {
        "tags": [
          "Pegawai"
        ],
        "summary": "Mendapatkan informasi pegawai dengan ID tersebut",
        "operationId": "deleteEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dari pegawai tersebut",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Pet": {
        "type": "object",
        "required": [
          "name",
          "photoUrls"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
      },
      "UserArray": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "description": "List of user object",
        "required": true
      }
    }
  }
}